# Generated by Django 4.2.7 on 2023-11-16 18:36

from django.db import migrations
from apps.resource.models import Collection, Faculty, School, Career


def populate_collections(apps, schema_editor):
    collections = [
        "Ambiente",
        "Calidad de Vida",
        "Ciencias Básicas",
        "Cultura",
        "Educación",
        "Energía",
        "Ética",
        "Geopolítica",
        "Gestión Universitaria",
        "Patrimonio UC",
        "Política, Estado, Derecho y Sociedad",
        "Salud",
        "Sistemas Productivos y de Desarrollo Sustentable",
        "Tecnología",
        "Tecnología y Comuniación",
    ]

    for collection in collections:
        collection = Collection(name=collection)
        collection.save()


def populate_faculties(apps, schema_editor):
    data = [
        "Facultad Experimental Ciencias y Tecnología",
        "Facultad de Ciencias de la Educación",
        "Facultad de Ciencias de la Salud",
        "Facultad de Ciencias Económicas y Sociales",
        "Facultad de Ciencias Jurídicas y Políticas",
        "Facultad de Ingeniería",
        "Facultad de Odontología",
    ]

    for faculty in data:
        faculty = Faculty(name=faculty)
        faculty.save()


def populate_schools(apps, schema_editor):
    data = [
        {
            "faculty": "Facultad Experimental Ciencias y Tecnología",
            "schools": [
                "Departamento de Biología",
                "Departamento de Ciencias Ambientales",
                "Departamento de Computación",
                "Departamento de Física",
                "Departamento de Matemática",
                "Departamento de Química",
            ],
        },
        {
            "faculty": "Facultad de Ciencias de la Educación",
            "schools": ["Escuela de Educación"],
        },
        {
            "faculty": "Facultad de Ciencias de la Salud",
            "schools": [
                "Escuela de Bioanálisis",
                "Escuela de Ciencias Biomédicas y Tecnológicas",
                "Escuela de Enfermería",
                "Escuela de Medicina",
                "Escuela de Salud Pública y Desarrollo Social",
            ],
        },
        {
            "faculty": "Facultad de Ciencias Económicas y Sociales",
            "schools": [
                "Escuela de Administración y Contaduría",
                "Escuela de Economía",
                "Escuela de Relaciones Industriales",
            ],
        },
        {
            "faculty": "Facultad de Ciencias Jurídicas y Políticas",
            "schools": [
                "Escuela de Ciencias Forenses",
                "Escuela de Derecho",
                "Escuela de Estudios Políticos y Fiscales",
            ],
        },
        {
            "faculty": "Facultad de Ingeniería",
            "schools": [
                "Escuela de Arquitectura",
                "Escuela de Ingeniería Civil",
                "Escuela de Ingeniería Eléctrica",
                "Escuela de Ingeniería Industrial",
                "Escuela de Ingeniería de Telecomunicaciones",
                "Escuela de Ingeniería Mecánica",
                "Escuela de Ingeniería Química",
            ],
        },
        {
            "faculty": "Facultad de Odontología",
            "schools": ["Escuela de Odontología"],
        },
    ]

    for school in data:
        faculty_name = Faculty.objects.get(name=school["faculty"])
        for school_name in school["schools"]:
            School.objects.create(name=school_name, faculty=faculty_name)


def populate_careers(apps, schema_editor):
    data = [
        {"school": "Departamento de Biología", "careers": ["Biología"]},
        {
            "school": "Departamento de Ciencias Ambientales",
            "careers": ["Ciencias Ambientales"],
        },
        {
            "school": "Departamento de Computación",
            "careers": ["Ciencias de la Computación"],
        },
        {"school": "Departamento de Física", "careers": ["Física"]},
        {"school": "Departamento de Matemática", "careers": ["Matemáticas"]},
        {"school": "Departamento de Química", "careers": ["Química"]},
        {
            "school": "Escuela de Administración y Contaduría",
            "careers": ["Administración Comercial", "Contaduría Pública"],
        },
        {"school": "Escuela de Arquitectura", "careers": ["Arquitectura"]},
        {"school": "Escuela de Bioanálisis", "careers": ["Bioanálisis"]},
        {"school": "Escuela de Derecho", "careers": ["Derecho"]},
        {
            "school": "Escuela de Ciencias Biomédicas y Tecnológicas",
            "careers": [
                "TSU Tecnología Cardiopulmonar",
                "TSU Citotecnología",
                "TSU Imagenología",
                "TSU Histotecnología",
            ],
        },
        {"school": "Escuela de Ciencias Forenses", "careers": ["Ciencias Forenses"]},
        {
            "school": "Escuela de Economía",
            "careers": ["Economía"],
        },
        {
            "school": "Escuela de Educación",
            "careers": [
                "Educación",
                "Educación Integral",
                "Educación Musical",
                "Educación para el Trabajo (Comercial)",
                "Educación Preescolar",
                "Educación, Mención Artes Plásticas",
                "Educación, Mención Biología",
                "Educación, Mención Ciencias Sociales",
                "Educación, Mención Física",
                "Educación, Mención Física, Deportes y Recreación",
                "Educación, Mención Francés",
                "Educación, Mención Geografía e Historia",
                "Educación, Mención Informática",
                "Educación, Mención Inglés",
                "Educación, Mención Lengua y Literatura",
                "Educación, Mención Matemática",
                "Educación, Mención Química",
                "Educación, Mención Orientación",
                "Educación, Mención Química",
            ],
        },
        {
            "school": "Escuela de Enfermería",
            "careers": ["Enfermería (Licenciatura y TSU)"],
        },
        {"school": "Escuela de Medicina", "careers": ["Medicina"]},
        {
            "school": "Escuela de Estudios Políticos y Fiscales",
            "careers": ["Ciencias Fiscales", "Ciencias Políticas"],
        },
        {"school": "Escuela de Ingeniería Civil", "careers": ["Ingeniería Civil"]},
        {
            "school": "Escuela de Ingeniería Eléctrica",
            "careers": ["Ingeniería Eléctrica"],
        },
        {
            "school": "Escuela de Ingeniería Industrial",
            "careers": ["Ingeniería Industrial"],
        },
        {
            "school": "Escuela de Ingeniería Mecánica",
            "careers": ["Ingeniería Mecánica"],
        },
        {"school": "Escuela de Ingeniería Química", "careers": ["Ingeniería Química"]},
        {
            "school": "Escuela de Ingeniería de Telecomunicaciones",
            "careers": ["Ingeniería de Telecomunicaciones"],
        },
        {"school": "Escuela de Odontología", "careers": ["Odontología"]},
        {
            "school": "Escuela de Relaciones Industriales",
            "careers": ["Administración Comercial"],
        },
        {
            "school": "Escuela de Salud Pública y Desarrollo Social",
            "careers": [
                "TSU Terapia Psicosocial",
                "TSU Registros y Estadísticas de Salud",
                "Psicología",
                "Fisioterapia",
            ],
        },
    ]

    for career in data:
        school_name = School.objects.get(name=career["school"])
        for career_name in career["careers"]:
            Career.objects.create(name=career_name, school=school_name)


class Migration(migrations.Migration):
    dependencies = [
        ("resource", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(populate_collections),
        migrations.RunPython(populate_faculties),
        migrations.RunPython(populate_schools),
        migrations.RunPython(populate_careers),
    ]
